[
    {
        "id": "9a693308.7ebaf",
        "type": "subflow",
        "name": "flow-timer",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 100,
                "wires": [
                    {
                        "id": "7fc82258.93e36c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 440,
                "y": 100,
                "wires": [
                    {
                        "id": "7fc82258.93e36c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "name",
                "type": "str",
                "value": "measure",
                "ui": {
                    "icon": "font-awesome/fa-tag",
                    "label": {
                        "en-US": "Timer Name"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "operation",
                "type": "str",
                "value": "start",
                "ui": {
                    "icon": "font-awesome/fa-cog",
                    "label": {
                        "en-US": "Operation"
                    },
                    "type": "select",
                    "opts": {
                        "opts": [
                            {
                                "l": {
                                    "en-US": "start"
                                },
                                "v": "start"
                            },
                            {
                                "l": {
                                    "en-US": "stop"
                                },
                                "v": "stop"
                            },
                            {
                                "l": {
                                    "en-US": "msg.topic"
                                },
                                "v": "msg.topic"
                            },
                            {
                                "l": {
                                    "en-US": "msg.operation"
                                },
                                "v": "msg.operation"
                            },
                            {
                                "l": {
                                    "en-US": "msg.payload"
                                },
                                "v": "msg.payload"
                            }
                        ]
                    }
                }
            }
        ],
        "meta": {
            "module": "node-red-contrib-flow-performance",
            "type": "flow-performance",
            "version": "1.0.1",
            "author": "Steve-Mcl",
            "desc": "Inline flow performance measure node",
            "keywords": "node-red performance",
            "license": "MIT"
        },
        "color": "#DAEAAA",
        "icon": "node-red/timer.svg",
        "status": {
            "x": 280,
            "y": 160,
            "wires": [
                {
                    "id": "7fc82258.93e36c",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "7fc82258.93e36c",
        "type": "function",
        "z": "9a693308.7ebaf",
        "name": "do operation",
        "func": "// @ts-ignore\nvar name = msg.perfName || env.get(\"name\");\n// @ts-ignore\nvar operation = msg.perfOperation || env.get(\"operation\");\nvar measures = global.get(\"flow_timers\") || {};\nvar measure = measures[name] || {};\n\nfunction doOp(measure, op){\n    if(operation === \"start\"){\n        measure.start = Date.now();//change to process.hrtime\n        measure.stop = null;\n        measure.durationMs = null;\n    } else if(operation === \"stop\") {\n        measure.stop = Date.now();//change to process.hrtime\n        measure.durationMs = measure.start ? measure.stop - measure.start : null;\n        msg._performance = measure;\n    }\n}\n\n\nif(operation === \"start\"){\n    doOp(measure, operation);\n} else if(operation === \"stop\") {\n    doOp(measure, operation);\n    node.send([null, { payload: { text: name + \": \" + measure.durationMs + \"ms\" }}]);\n} else if(operation === \"msg.topic\") {\n    operation = msg.topic;\n    doOp(measure, operation);\n} else if(operation === \"msg.operation\") {\n    operation = msg.operation;\n    doOp(measure, operation);\n} else if(operation === \"msg.payload\") {\n    operation = msg.payload;\n    doOp(measure, operation);\n} else {\n    return [msg, null];\n}\nmeasures[name] = measure;\nglobal.set(\"flow_timers\", measures);\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 100,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3d98f01458760241",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ed1f19f2ad07a7f1",
        "type": "inject",
        "z": "3d98f01458760241",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "43c3acc1c29334b3",
                "712660ac0ad6ee51"
            ]
        ]
    },
    {
        "id": "420f53cb2f006a24",
        "type": "http request",
        "z": "3d98f01458760241",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://172.16.1.7:1026/v2/entities/Motion_sensor_state",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 470,
        "y": 380,
        "wires": [
            [
                "176d20263f699fc1"
            ]
        ]
    },
    {
        "id": "176d20263f699fc1",
        "type": "function",
        "z": "3d98f01458760241",
        "name": "",
        "func": "msg.payload = {\n    \"id\": \"Motion_sensor_state\",\n    \"type\": \"property\",\n    \"Thing\": \"Motion_sensor\",\n    \"name\": \"state\",\n    \"property\": \"state\",\n    \"values\": {\n        \"state\": \"CLEAR\"\n    }\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 380,
        "wires": [
            [
                "083e068cdd54ab07"
            ]
        ]
    },
    {
        "id": "083e068cdd54ab07",
        "type": "http request",
        "z": "3d98f01458760241",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://172.16.1.7:1026/v2/entities?options=keyValues",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 850,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "43c3acc1c29334b3",
        "type": "delay",
        "z": "3d98f01458760241",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 220,
        "wires": [
            [
                "2bfd0d85183865d8"
            ]
        ]
    },
    {
        "id": "2bfd0d85183865d8",
        "type": "openApi-red",
        "z": "3d98f01458760241",
        "name": "",
        "openApiUrl": "http://172.16.1.1:5001/things/628053741a01a885ed127bec",
        "api": "Actions",
        "server": "",
        "keepAuth": false,
        "alternServer": false,
        "operation": "executeSwitchOnAction",
        "operationData": {
            "tags": [
                "Actions"
            ],
            "summary": "Execute a switch on action",
            "description": "In response to an HTTP POST request on an Action URL with valid parameters as request body, an Extended Web Thing must either reject the request with the appropriate status code or queue a task to run the action and return the status of that action in a 201 Created response. The action may not run immediately. The Location HTTP header identifies the URL to use to retrieve the most recent update on the action's status.",
            "operationId": "executeSwitchOnAction",
            "requestBody": {
                "description": "Request body to switch on the AC",
                "content": {
                    "application/json": {
                        "schema": {
                            "required": [
                                "Thing",
                                "name",
                                "status",
                                "timestamp",
                                "type"
                            ],
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "example": "execution"
                                },
                                "Thing": {
                                    "type": "string",
                                    "example": "AirCondition_actuator"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "switchOn"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "executing"
                                },
                                "timestamp": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "value": {
                                    "type": "object",
                                    "properties": {
                                        "delay": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 50
                                        }
                                    }
                                }
                            },
                            "xml": {
                                "name": "SwitchOnRequestBody"
                            },
                            "$$ref": "http://172.16.1.1:5001/things/628053741a01a885ed127bec#/components/schemas/SwitchOnRequestBody"
                        }
                    }
                },
                "required": false
            },
            "responses": {
                "204": {
                    "description": "NO RESPONSE"
                },
                "404": {
                    "description": "Not found"
                }
            },
            "__originalOperationId": "executeSwitchOnAction",
            "path": "/actions/switchOn"
        },
        "errorHandling": "Standard",
        "internalErrors": {
            "readUrl": false
        },
        "parameters": [
            {
                "id": "requestBody",
                "name": "Request body",
                "in": "",
                "schema": {
                    "required": [
                        "Thing",
                        "name",
                        "status",
                        "timestamp",
                        "type"
                    ],
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "example": "execution"
                        },
                        "Thing": {
                            "type": "string",
                            "example": "AirCondition_actuator"
                        },
                        "name": {
                            "type": "string",
                            "example": "switchOn"
                        },
                        "status": {
                            "type": "string",
                            "example": "executing"
                        },
                        "timestamp": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "value": {
                            "type": "object",
                            "properties": {
                                "delay": {
                                    "type": "integer",
                                    "format": "int32",
                                    "example": 50
                                }
                            }
                        }
                    },
                    "xml": {
                        "name": "SwitchOnRequestBody"
                    },
                    "$$ref": "http://172.16.1.1:5001/things/628053741a01a885ed127bec#/components/schemas/SwitchOnRequestBody"
                },
                "value": "{}",
                "required": false,
                "isActive": false,
                "description": "Request body to switch on the AC",
                "type": "json",
                "allowedTypes": [
                    "json",
                    "jsonata",
                    "msg",
                    "flow",
                    "global"
                ],
                "keys": [
                    "Thing",
                    "name",
                    "status",
                    "timestamp",
                    "type",
                    "value"
                ]
            }
        ],
        "requestContentType": "application/json",
        "responseContentType": "",
        "showDescription": true,
        "outputs": 1,
        "x": 670,
        "y": 220,
        "wires": [
            [
                "cbee0b0a2e62d047"
            ]
        ]
    },
    {
        "id": "cbee0b0a2e62d047",
        "type": "switch",
        "z": "3d98f01458760241",
        "name": "",
        "property": "payload.body.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "DETECTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CLEAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 220,
        "wires": [
            [
                "ce68f4950b4f6c45"
            ],
            [
                "416c738aec7272d1"
            ]
        ]
    },
    {
        "id": "ce68f4950b4f6c45",
        "type": "openApi-red",
        "z": "3d98f01458760241",
        "name": "",
        "openApiUrl": "http://172.16.1.1:5001/things/628053561a01a885ed127be7",
        "api": "Actions",
        "server": "",
        "keepAuth": false,
        "alternServer": false,
        "operation": "executeLampOnAction",
        "operationData": {
            "tags": [
                "SmartLamp"
            ],
            "summary": "Switch ON the Smart Lamp",
            "description": "In response to an HTTP POST request on an Action URL with valid parameters as request body, an Extended Web Thing must either reject the request with the appropriate status code or queue a task to run the action and return the status of that action in a 201 Created response. The action may not run immediately. The Location HTTP header identifies the URL to use to retrieve the most recent update on the action's status.",
            "operationId": "executeLampOnAction",
            "requestBody": {
                "description": "Request body to switch on the Smart Lamp",
                "content": {
                    "application/json": {
                        "schema": {
                            "required": [
                                "Thing",
                                "name",
                                "status",
                                "timestamp",
                                "type"
                            ],
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "example": "execution"
                                },
                                "Thing": {
                                    "type": "string",
                                    "example": "SmartLamp_actuator"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "lampOn"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "executing"
                                },
                                "timestamp": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "value": {
                                    "type": "object",
                                    "properties": {
                                        "delay": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 50
                                        }
                                    }
                                }
                            },
                            "xml": {
                                "name": "LampOnRequestBody"
                            },
                            "$$ref": "http://172.16.1.1:5001/things/6253156f1f828ab4ddcdd5b1#/components/schemas/LampOnRequestBody"
                        }
                    }
                },
                "required": false
            },
            "responses": {
                "204": {
                    "description": "NO RESPONSE"
                },
                "404": {
                    "description": "Not found"
                }
            },
            "__originalOperationId": "executeLampOnAction",
            "path": "/actions/lampOn"
        },
        "errorHandling": "Standard",
        "internalErrors": {
            "readUrl": false
        },
        "parameters": [
            {
                "id": "requestBody",
                "name": "Request body",
                "in": "",
                "schema": {
                    "required": [
                        "Thing",
                        "name",
                        "status",
                        "timestamp",
                        "type"
                    ],
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "example": "execution"
                        },
                        "Thing": {
                            "type": "string",
                            "example": "SmartLamp_actuator"
                        },
                        "name": {
                            "type": "string",
                            "example": "lampOn"
                        },
                        "status": {
                            "type": "string",
                            "example": "executing"
                        },
                        "timestamp": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "value": {
                            "type": "object",
                            "properties": {
                                "delay": {
                                    "type": "integer",
                                    "format": "int32",
                                    "example": 50
                                }
                            }
                        }
                    },
                    "xml": {
                        "name": "LampOnRequestBody"
                    },
                    "$$ref": "http://172.16.1.1:5001/things/6253156f1f828ab4ddcdd5b1#/components/schemas/LampOnRequestBody"
                },
                "value": "{\"type\":\"execution\",\"Thing\":\"SmartHome_actuator\",\"name\":\"lampOn\",\"status\":\"executing\",\"timestamp\":\"2021-04-04T18:33:25.938Z\",\"value\":{\"delay\":50}}",
                "required": false,
                "isActive": true,
                "description": "Request body to switch on the Smart Lamp",
                "type": "json",
                "allowedTypes": [
                    "json",
                    "jsonata",
                    "msg",
                    "flow",
                    "global"
                ],
                "keys": [
                    "Thing",
                    "name",
                    "status",
                    "timestamp",
                    "type",
                    "value"
                ]
            }
        ],
        "requestContentType": "application/json",
        "responseContentType": "",
        "showDescription": true,
        "outputs": 1,
        "x": 1080,
        "y": 160,
        "wires": [
            [
                "aabad7c74919e46e",
                "f293b4a21908ab91"
            ]
        ]
    },
    {
        "id": "416c738aec7272d1",
        "type": "openApi-red",
        "z": "3d98f01458760241",
        "name": "",
        "openApiUrl": "http://172.16.1.1:5001/things/628053561a01a885ed127be7",
        "api": "Actions",
        "server": "",
        "keepAuth": false,
        "alternServer": false,
        "operation": "executeLampOffAction",
        "operationData": {
            "tags": [
                "Actions"
            ],
            "summary": "switch OFF the smart Lamp",
            "description": "In response to an HTTP POST request on an Action URL with valid parameters as request body, an Extended Web Thing must either reject the request with the appropriate status code or queue a task to run the action and return the status of that action in a 201 Created response. The action may not run immediately. The Location HTTP header identifies the URL to use to retrieve the most recent update on the action's status.",
            "operationId": "executeLampOffAction",
            "requestBody": {
                "description": "Request body to switch off the Smart Lamp",
                "content": {
                    "application/json": {
                        "schema": {
                            "required": [
                                "Thing",
                                "name",
                                "status",
                                "timestamp",
                                "type"
                            ],
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "example": "execution"
                                },
                                "Thing": {
                                    "type": "string",
                                    "example": "SmartLamp_actuator"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "lampOn"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "executing"
                                },
                                "timestamp": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "value": {
                                    "type": "object",
                                    "properties": {
                                        "delay": {
                                            "type": "integer",
                                            "format": "int32",
                                            "example": 50
                                        }
                                    }
                                }
                            },
                            "xml": {
                                "name": "LampOnRequestBody"
                            },
                            "$$ref": "http://172.16.1.1:5001/things/625302b947ef81c922dd2476#/components/schemas/LampOnRequestBody"
                        }
                    }
                },
                "required": false
            },
            "responses": {
                "204": {
                    "description": "NO RESPONSE"
                },
                "404": {
                    "description": "Not found"
                }
            },
            "__originalOperationId": "executeLampOffAction",
            "path": "/actions/lampOff"
        },
        "errorHandling": "Standard",
        "internalErrors": {
            "readUrl": false
        },
        "parameters": [
            {
                "id": "requestBody",
                "name": "Request body",
                "in": "",
                "schema": {
                    "required": [
                        "Thing",
                        "name",
                        "status",
                        "timestamp",
                        "type"
                    ],
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "example": "execution"
                        },
                        "Thing": {
                            "type": "string",
                            "example": "SmartLamp_actuator"
                        },
                        "name": {
                            "type": "string",
                            "example": "lampOn"
                        },
                        "status": {
                            "type": "string",
                            "example": "executing"
                        },
                        "timestamp": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "value": {
                            "type": "object",
                            "properties": {
                                "delay": {
                                    "type": "integer",
                                    "format": "int32",
                                    "example": 50
                                }
                            }
                        }
                    },
                    "xml": {
                        "name": "LampOnRequestBody"
                    },
                    "$$ref": "http://172.16.1.1:5001/things/625302b947ef81c922dd2476#/components/schemas/LampOnRequestBody"
                },
                "value": "{\"type\":\"execution\",\"Thing\":\"SmartHome_actuator\",\"name\":\"lampOff\",\"status\":\"executing\",\"timestamp\":\"2021-04-04T18:33:25.938Z\",\"value\":{\"delay\":50}}",
                "required": false,
                "isActive": true,
                "description": "Request body to switch off the Smart Lamp",
                "type": "json",
                "allowedTypes": [
                    "json",
                    "jsonata",
                    "msg",
                    "flow",
                    "global"
                ],
                "keys": [
                    "Thing",
                    "name",
                    "status",
                    "timestamp",
                    "type",
                    "value"
                ]
            }
        ],
        "requestContentType": "application/json",
        "responseContentType": "",
        "showDescription": true,
        "outputs": 1,
        "x": 1080,
        "y": 260,
        "wires": [
            [
                "aabad7c74919e46e",
                "f293b4a21908ab91"
            ]
        ]
    },
    {
        "id": "265777b726da0585",
        "type": "comment",
        "z": "3d98f01458760241",
        "name": "Description",
        "info": "Motion Sensor and Smart Lamp application",
        "x": 200,
        "y": 120,
        "wires": []
    },
    {
        "id": "aabad7c74919e46e",
        "type": "debug",
        "z": "3d98f01458760241",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 200,
        "wires": []
    },
    {
        "id": "712660ac0ad6ee51",
        "type": "subflow:9a693308.7ebaf",
        "z": "3d98f01458760241",
        "name": "",
        "x": 320,
        "y": 340,
        "wires": [
            [
                "420f53cb2f006a24"
            ]
        ]
    },
    {
        "id": "f293b4a21908ab91",
        "type": "subflow:9a693308.7ebaf",
        "z": "3d98f01458760241",
        "name": "",
        "env": [
            {
                "name": "operation",
                "value": "stop",
                "type": "str"
            }
        ],
        "x": 1380,
        "y": 80,
        "wires": [
            []
        ]
    }
]